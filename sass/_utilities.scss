@forward "./config";

@mixin circleMaker($color) {
  background-color: $color;
  height: 10rem;
  width: 10rem;
  border-radius: 50%;
  margin: $standard * 1.2;
  color: $success;
}

@mixin flex($add) {
  display: flex;
  justify-content: center;
  align-items: center;

  @if ($add == "col") {
    flex-direction: column;
  }

  @if ($add == "even") {
    justify-content: space-between;
  }
}

@mixin capsbold($font) {
  font-size: $font;
  text-transform: uppercase;
  font-weight: bold;
}

// default value that the padding is normal
@mixin button($pad: $normal, $bg: map-get($colors, "purple"), $clr: white) {
  border: none;
  text-decoration: none;
  cursor: pointer;
  padding: calc($pad / 2) $pad;
  background-color: $bg;
  color: $clr;
}

@mixin link($font, $padding) {
  @include capsbold($font);
  letter-spacing: calc(0.15rem + 0.15vw);
  border-bottom: solid calc(0.12rem + 0.01vw) black;
  padding-bottom: $padding;
}

@function light-comp($color) {
  $complement: complement($color);
  $light-complement: lighten($complement, 30%);
  @return $light-complement;
}

@function color-changer($color) {
  @if (lightness($color) > 90) {
    @return #000;
  } @else {
    @return #fff;
  }
}

// @mixin breakpoint($bp: 0) {
//   @media (min-width: $bp) {
//     @content;
//   }
// }

$breakpoints: (
  "xs": 360px,
  "sm": 480px,
  "md": 720px,
  "lg": 960px,
  "xl": 1199px,
  "xxl": 1550px,
);

@mixin xs {
  @media (max-width: map-get($breakpoints, "xs")) {
    @content;
  }
}

@mixin sm {
  @media (max-width: map-get($breakpoints, "sm")) {
    @content;
  }
}

@mixin md {
  @media (max-width: map-get($breakpoints, "md")) {
    @content;
  }
}

@mixin md-h {
  @media (min-height: 600px) {
    @content;
  }
}

@mixin lg {
  @media (max-width: map-get($breakpoints, "lg")) {
    @content;
  }
}

@mixin xl {
  @media (max-width: map-get($breakpoints, "xl")) {
    @content;
  }
}

@mixin xxl {
  @media (max-width: map-get($breakpoints, "xxl")) {
    @content;
  }
}
